<%- include("../../views/partials/admin/header") %>

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-10 col-md-9 ml-sm-auto p-4">
                <h2 class="text-center mb-4">Add Coupon</h2>
                <form id="addCouponForm" action="/admin/coupons/add" method="post">
                    <div class="mb-3">
                        <label for="code" class="form-label">Coupon Code</label>
                        <input type="text" class="form-control" id="code" name="code" value="<%= couponCode %>"
                            required>
                        <div class="invalid-feedback">Please provide a valid coupon code (no spaces allowed).</div>
                    </div>

                    <div class="mb-3">
                        <label for="minOrderPrice" class="form-label">Minimum Order Price</label>
                        <input type="number" class="form-control" id="minOrderPrice" name="min_order_price"
                            placeholder="Enter minimum order price" required>
                        <div class="invalid-feedback">Please enter a valid price (greater than 0).</div>
                    </div>

                    <div class="mb-3">
                        <label for="discountRs" class="form-label">Discount Rs</label>
                        <input type="number" class="form-control" id="discountRs" name="discount_rs"
                            placeholder="Enter discount rs" required>
                        <div class="invalid-feedback">Please enter a valid discount rs (greater than 0).</div>
                    </div>
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" name="start_date" required>
                        <div class="invalid-feedback">Start date should not be before today.</div>
                    </div>
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" name="end_date" required>
                        <div class="invalid-feedback">End date should not be before start date or today.</div>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description"
                            placeholder="Enter coupon description"></textarea>
                        <div class="invalid-feedback">Please provide a valid description (no spaces allowed).</div>
                    </div>
                    <div class="mb-3">
                        <label for="usageLimit" class="form-label">Usage Limit</label>
                        <input type="number" class="form-control" id="usageLimit" name="usage_limit"
                            placeholder="Enter usage limit" required>
                        <div class="invalid-feedback">Please enter a valid usage limit (greater than 0).</div>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Coupon</button>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('addCouponForm');

            form.addEventListener('submit', function (event) {
                event.preventDefault();
                const code = document.getElementById('code');
                const minOrderPrice = document.getElementById('minOrderPrice');
                const discountRs = document.getElementById('discountRs');
                const startDate = document.getElementById('startDate');
                const endDate = document.getElementById('endDate');
                const description = document.getElementById('description');
                const usageLimit = document.getElementById('usageLimit');

                let isValid = true;
                const isNotEmptyOrSpaces = (str) => str.trim().length > 0;
                const isPositiveNumber = (num) => num > 0;

                const today = new Date().toISOString().split('T')[0];
                const startValue = startDate.value;
                const endValue = endDate.value;

                if (!isNotEmptyOrSpaces(code.value)) {
                    code.classList.add('is-invalid');
                    isValid = false;
                } else {
                    code.classList.remove('is-invalid');
                }
                if (!isPositiveNumber(minOrderPrice.value)) {
                    minOrderPrice.classList.add('is-invalid');
                    isValid = false;
                } else {
                    minOrderPrice.classList.remove('is-invalid');
                }
                const maxDiscountPercentage = 50;
                const minOrderPriceValue = Number(minOrderPrice.value);
                const discountRsValue = Number(discountRs.value);
                const maxFlatDiscount = (minOrderPriceValue * maxDiscountPercentage) / 100;

                if (!isPositiveNumber(discountRsValue) || discountRsValue > maxFlatDiscount) {
                    discountRs.classList.add('is-invalid');
                    if (discountRsValue > maxFlatDiscount) {
                        discountRs.setCustomValidity(`Discount cannot exceed â‚¹${maxFlatDiscount.toFixed(2)} (${maxDiscountPercentage}% of the min order price).`);
                        discountRs.reportValidity();
                    }
                    isValid = false;
                } else {
                    discountRs.classList.remove('is-invalid');
                    discountRs.setCustomValidity('');
                }
                if (startValue < today) {
                    startDate.classList.add('is-invalid');
                    isValid = false;
                } else {
                    startDate.classList.remove('is-invalid');
                }
                if (endValue < startValue || endValue < today) {
                    endDate.classList.add('is-invalid');
                    isValid = false;
                } else {
                    endDate.classList.remove('is-invalid');
                }

                if (!isNotEmptyOrSpaces(description.value)) {
                    description.classList.add('is-invalid');
                    isValid = false;
                } else {
                    description.classList.remove('is-invalid');
                }
                if (!isPositiveNumber(usageLimit.value)) {
                    usageLimit.classList.add('is-invalid');
                    isValid = false;
                } else {
                    usageLimit.classList.remove('is-invalid');
                }

                if (isValid) {
                    const formData = new FormData(form);
                    const data = Object.fromEntries(formData.entries());

                    fetch('/admin/coupons/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(result => {
                            if (result.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Coupon Added',
                                    text: 'Coupon has been added successfully!',
                                }).then(() => {
                                    window.location.href = '/admin/coupons';
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: result.message || 'An error occurred while adding the coupon.',
                                });
                            }
                        })
                        .catch(error => {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Something went wrong, please try again later.',
                            });
                        });
                }
            });
        });

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <%- include("../../views/partials/admin/footer") %>