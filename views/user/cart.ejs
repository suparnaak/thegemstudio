<!--header begins-->
<%- include("../../views/partials/user/header") %>
  <!--header ends-->
  <div class="breadcrumbs">
    <div class="container_12">
      <div class="grid_12">
        <a href="/">Home</a><span></span><span class="current">Cart</span>
      </div>
    </div>
  </div>
  <section id="main">
    <div class="container_12">
      <div id="content" class="grid_12">
        <header>
          <h1 class="page_title">Shopping cart</h1>
        </header>
        <article>
          <div id="cart-container">
            <table class="cart_product">
              <tr class="bg">
                <th class="images" style="text-align: left;"></th>
                <th class="name" style="text-align: left;">Product Name</th>
                <th class="price" style="text-align: left;">Unit Price</th>
                <th class="discount" style="text-align: left;">Discount</th>
                <th class="discount" style="text-align: left;">Discounted Price</th>
                <th class="qty" style="text-align: left;">Qty</th>
                <th class="subtotal" style="text-align: left;">Subtotal</th>
                <th class="close" style="text-align: left;"> </th>
              </tr>

              <% if ((cart && cart.length> 0) || (unavailableProducts && unavailableProducts.length > 0)) { %>
                <% // First, render available products %>
                  <% cart.forEach(function(item) { %>
                    <tr data-product-id="<%= item.product._id %>">
                      <td class="images" style="text-align: left;">
                        <a href="/product_page/<%= item.product._id %>">
                          <img src="<%= item.product.images[0] %>" alt="<%= item.product.name %>" title="<%= item.product.name %>">

                        </a>
                      </td>
                      <td class="name" style="text-align: left;">
                        <%= item.product.name %>
                      </td>
                      <td class="price" style="text-align: left;">₹<%= item.product.price %>
                      </td>
                      <td class="discount" style="text-align: left;">
                        <%= item.appliedDiscountPercent %> %
                      </td>
                      <td class="discount" style="text-align: left;">
                        <%= item.finalPrice %>
                      </td>
                      <td class="qty" style="text-align: left;">
                        <button class="qty-btn minus" data-product-id="<%= item.product._id %>"
                          style="display: inline-block; margin: 0 auto; padding: 0 5px; height: 20px; line-height: 20px; color: white;">-</button>
                        <span style="margin-bottom: 5px;">
                          <%= item.quantity %>
                        </span>
                                          
                          <button class="qty-btn plus" data-product-id="<%= item.product._id %>"
                            style="display: inline-block; margin: 0 auto; padding: 0 5px; height: 20px; line-height: 20px; color: white;">+</button>

                      </td>
                      <td class="subtotal" style="text-align: left;">
                        ₹<%= item.finalPrice * item.quantity %>
                      </td>
                      <td class="close" style="text-align: center;">
                        <button class="close" data-product-id="<%= item.product._id %>"
                          style="opacity: 1; display: inline-block;">X</button>
                      </td>
                    </tr>
                    <% }); %>

                     
                        <% if (unavailableProducts && unavailableProducts.length> 0) { %>
                          <% unavailableProducts.forEach(function(product) { %>
                            <tr style="color: red;">
                              <td class="images" style="text-align: left;">
                                <% if (product.id) { %>
                                  <a href="/product_page/<%= product.id %>">
                                    <img src="<%= product.images[0] %>" alt="<%= product.name %>" title="<%= product.name %>">
                                  </a>
                                  <% } %>
                              </td>
                              <td class="name" style="text-align: left; ">
                                <%= product.name %> <br>
                                  <small>(<%= product.status %>)</small>
                              </td>
                              <td class="price" style="text-align: left;">NA</td>
                              <td class="discount" style="text-align: left;">NA</td>
                              <td class="discount" style="text-align: left;">NA</td>
                              <td class="qty" style="text-align: left;">NA</td>
                              <td class="subtotal" style="text-align: left;">NA</td>
                              <td class="close" style="text-align: center;">
                                <button class="close" data-product-id="<%= product.id %>"
                                  style="opacity: 1; display: inline-block;">X</button>
                              </td>
                            </tr>
                            <% }); %>
                              <% } %>
                                <% } else { %>
                                  <tr>
                                    <td colspan="8">Your cart is empty.</td>
                                  </tr>
                                  <% } %>

                                    <tr>
                                      <td colspan="8" class="cart_but">
                                        <a href="/products" class="continue" style="color: rgb(137, 144, 185);">
                                          <img src="img/cont.png" alt="" title=""> Continue Shopping
                                        </a>
                                      </td>
                                    </tr>
            </table>
          </div>
          <div id="cart_forms" class="negative-grid">
            <div class="grid_4">
            </div><!-- .grid_4 -->
            <div class="grid_4">
              <div class="bottom_block total">
                <table class="subtotal">
                  <tr class="grand_total">
                    <td>Grand Total</td>
                    <td class="price">₹<span id="grand_total">
                        <%= grandTotal %>
                      </span></td>
                  </tr>
                </table>
                <form action="/checkout" method="POST">
                  <button type="submit" class="checkout" id="checkout-button" >PROCEED TO ORDER <img
                      src="/img/checkout.png" alt="" title=""></button>
                </form>
              </div><!-- .total -->
            </div><!-- .grid_4 -->
            <div class="clear"></div>
          </div><!-- #cart_forms -->
          <div class="clear"></div>
        </article>
      </div><!-- #content -->
      <div class="clear"></div>
    </div><!-- .container_12 -->
  </section><!-- #main -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const plusButtons = document.querySelectorAll('.plus');
    const minusButtons = document.querySelectorAll('.minus');
    const checkoutButton = document.getElementById("checkout-button");

    // Quantity increment
    plusButtons.forEach(button => {
      button.addEventListener('click', function () {
        const productId = this.getAttribute('data-product-id');
        const quantityElement = document.querySelector(`tr[data-product-id="${productId}"] .qty span`);
        const previousQuantity = parseInt(quantityElement.textContent);
        const quantity = previousQuantity + 1;

        // Check if the new quantity exceeds the maximum limit
        if (quantity > 5) {
          Swal.fire({
            icon: 'warning',
            title: 'Max Quantity Reached',
            text: 'You can only add up to 5 items.',
            timer: 2000,
            showConfirmButton: false
          });
          return; // Prevent further execution
        }

        // Update the quantity on the server
        updateQuantity(productId, quantity);
      });
    });

    // Quantity decrement
    minusButtons.forEach(button => {
      button.addEventListener('click', function () {
        const productId = this.getAttribute('data-product-id');
        const quantityElement = document.querySelector(`tr[data-product-id="${productId}"] .qty span`);
        const previousQuantity = parseInt(quantityElement.textContent);
        const quantity = previousQuantity - 1;

        // Check if the new quantity is below the minimum limit
        if (quantity < 1) {
          Swal.fire({
            icon: 'warning',
            title: 'Min Quantity Reached',
            text: 'You must add at least 1 item.',
            timer: 2000,
            showConfirmButton: false
          });
          return; // Prevent further execution
        }

        // Update the quantity on the server
        updateQuantity(productId, quantity);
      });
    });

    // Update quantity function
    function updateQuantity(productId, quantity) {
      fetch('/cart/update', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity }),
      })
        .then(response => response.json())
        .then(body => {
          if (body.success) {
            // Update the quantity in the DOM
            const quantityElement = document.querySelector(`tr[data-product-id="${productId}"] .qty span`);
            quantityElement.textContent = quantity;

            // Show success alert
            Swal.fire({
              icon: 'success',
              title: 'Cart updated successfully',
              text: 'Your cart has been updated successfully.',
              timer: 2000,
              showConfirmButton: false
            });

            // Update cart totals and display
            updateCartTotals(body.cart, body.grandTotal);
            updateCartDisplay(body.grandTotal, body.recentItems);
          } else {
            // Show error alert if the update fails
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: body.error || 'Failed to update cart',
              timer: 2000,
              showConfirmButton: false
            });
          }
        })
        .catch(error => {
          console.error('Error updating cart:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'There was a problem updating the cart.',
            timer: 2000,
            showConfirmButton: false
          });
        });
    }

    // Checkout button click event
    checkoutButton.addEventListener("click", function (event) {
      event.preventDefault();

      const cartItems = document.querySelectorAll(".cart_product tr[data-product-id]");
      if (cartItems.length === 0) {
        Swal.fire({
          icon: 'warning',
          title: 'Cart is Empty',
          text: 'You cannot proceed to order because your cart is empty.',
          timer: 2000,
          showConfirmButton: false
        });
        return; // Exit the function if the cart is empty
      }

      this.closest("form").submit();
    });

    // Remove item from cart
    const removeButtons = document.querySelectorAll('.close');
    removeButtons.forEach(button => {
      button.addEventListener('click', function (event) {
        const productId = this.getAttribute('data-product-id');
        if (productId) {
          Swal.fire({
            title : 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
          }).then((result) => {
            if (result.isConfirmed) {

              fetch('/cart/remove', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
              })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    console.log("Response data:", data);
                    Swal.fire({
                      icon: 'success',
                      title: 'Removed!',
                      text: 'The item has been removed from your cart.',
                      timer: 2000,
                      showConfirmButton: false
                    });


                    const itemRow = document.querySelector(`tr[data-product-id="${productId}"]`);
                    if (itemRow) {
                      itemRow.remove();
                    }

                    updateCartTotals(data.cart, data.grandTotal);
                    updateCartDisplay(data.grandTotal, data.recentItems);
                  } else {
                    Swal.fire({
                      icon: 'error',
                      title: 'Failed to remove',
                      text: data.error || 'Failed to remove the item from your cart',
                      timer: 2000,
                      showConfirmButton: false
                    });
                  }
                })
                .catch(error => {
                  console.error('Error removing item:', error);
                  Swal.fire({
                    icon: 'error',
                    title: 'Network Error',
                    text: 'There was an issue removing the item from your cart.',
                    timer: 2000,
                    showConfirmButton: false
                  });
                });
            }
          });
        }
      });
    });

    // Update cart totals function
    function updateCartTotals(cart, grandTotal) {
      const subtotalElement = document.querySelector('.subtotal .price');
      const grandTotalElement = document.querySelector('.grand_total .price');

      if (!cart || cart.length === 0) {
        subtotalElement.textContent = `₹0.00`;
        grandTotalElement.textContent = `₹0.00`;
        return;
      }

      let subtotal = 0;

      cart.forEach(item => {
        const itemTotal = item.finalPrice * item.quantity;
        subtotal += itemTotal;

        const itemSubtotalElement = document.querySelector(`tr[data-product-id="${item.product._id}"] .subtotal`);
        if (itemSubtotalElement) {
          itemSubtotalElement.textContent = `₹${itemTotal.toFixed(2)}`;
        }
      });

      subtotalElement.textContent = `₹${subtotal.toFixed(2)}`;

      if (grandTotal !== undefined) {
        grandTotalElement.textContent = `₹${grandTotal.toFixed(2)}`;
      }
    }

    // Update cart display function
    function updateCartDisplay(totalPrice, recentItems) {
      try {
        console.log("Total Price:", totalPrice);
        console.log("Recent Items:", recentItems);

        // Update total price in the cart
        if (!Array.isArray(recentItems)) {
          console.error("Recent items is not an array:", recentItems);
          return; // Exit the function if recentItems is not an array
        }

        document.querySelector('#cart_nav span').textContent = `₹${totalPrice.toFixed(2)}`;

        // Clear existing recent items, but keep the heading
        const recentItemsContainer = document.querySelector('.cart_cont');
        const heading = recentItemsContainer.querySelector('.recently');
        
        // Remove all items except the heading and buttons
        recentItemsContainer.querySelectorAll('li:not(.no_border):not(.recently)').forEach(item => item.remove());

        // Populate recent items
        recentItems.forEach(item => {
          const li = document.createElement('li');
          li.innerHTML = `
            <a href="/product_page/${item.product._id}" class="prev_cart">
              <div class="cart_vert">
                <img src="${item.product.images[0]}" alt="${item.product.name}" title="${item.product.name}" />
              </div>
            </a>
            <div class="cont_cart">
              <h4>${item.product.name}</h4>
              <div class="price">
                ${item.quantity} x <span>₹ ${item.finalPrice}</span>
              </div>
            </div>
            
            <div class="clear"></div>
          `;

          // Append the new item to the container
          recentItemsContainer.insertBefore(li, recentItemsContainer.querySelector('.no_border:last-child'));
        });

        // Update no items message
        if (recentItems.length === 0) {
          recentItemsContainer.innerHTML += '<li class="no_items">No items in the cart</li>';
        }
      } catch (error) {
        console.error("Error updating cart display:", error);
 }
    }
  });
</script>

   <!--footer begins-->
    <%- include("../../views/partials/user/footer") %>
      <!--footer ends-->