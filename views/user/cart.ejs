<!--header begins-->
<%- include("../../views/partials/user/header") %>
<!--header ends-->
<div class="breadcrumbs">
  <div class="container_12">
    <div class="grid_12">
      <a href="/">Home</a><span></span><span class="current">Cart</span>
    </div>
  </div>
</div>
<section id="main">
  <div class="container_12">
    <div id="content" class="grid_12">
      <header>
        <h1 class="page_title">Shopping cart</h1>
      </header>
      <article>
        <div id="cart-container">
          <table class="cart_product">
            <tr class="bg">
              <th class="images" style="text-align: left;"></th>
              <th class="name" style="text-align: left;">Product Name</th>
              <th class="price" style="text-align: left;">Unit Price</th>
              <th class="discount" style="text-align: left;">Discount</th>
              <th class="qty" style="text-align: left;">Qty</th>
              <th class="subtotal" style="text-align: left;">Subtotal</th>
              <th class="close" style="text-align: left;"> </th>
            </tr>
            <% if (cart) { %>
              <% cart.forEach(function(item) { %>
                <tr data-product-id="<%= item.product._id %>">
                  <td class="images" style="text-align: left;">
                    <a href="/product_page/<%= item.product._id %>">
                      <img src="/uploads/products/<%= item.product.images[0] %>" alt="<%= item.product.name %>"
                        title="">
                    </a>
                  </td>
                  <td class="name" style="text-align: left;">
                    <%= item.product.name %>
                  </td>
                  <td class="price" style="text-align: left;">₹<%= item.product.price %>
                  </td>
                  <td class="discount" style="text-align: left;">
                    <%= item.product.discount %> %
                  </td>
                  <td class="qty" style="text-align: left;">
                    <span style="margin-bottom: 5px;">
                      <%= item.quantity %>
                    </span>
                    <div style="text-align: left;">
                      <button class="qty-btn minus" data-product-id="<%= item.product._id %>"
                        style="display: inline-block; margin: 0 auto; padding: 0 5px; height: 20px; line-height: 20px; color: white;">-</button>
                      <button class="qty-btn plus" data-product-id="<%= item.product._id %>"
                        style="display: inline-block; margin: 0 auto; padding: 0 5px; height: 20px; line-height: 20px;color: white;">+</button>
                    </div>
                  </td>
                  <td class="subtotal" style="text-align: left;">
                    ₹<%= ((item.product.price - (item.product.price * item.product.discount / 100)) *
                      item.quantity).toFixed(2) %>
                  </td>
                  <td class="close" style="text-align: center;">
                    <button class="close" data-product-id="<%= item.product._id %>" style="opacity: 1;display: inline-block;">X</button>
                  </td>
                </tr>
              <% }); %>
              
            <% } else { %>
              <tr>
                <td colspan="7">Your cart is empty.</td>
              </tr>
            <% } %>
            <tr>
              <td colspan="7" class="cart_but">
                <a href="/products" class="continue" style="color: rgb(137, 144, 185);"><img src="img/cont.png" alt="" title=""> Continue
                  Shopping</a>
              </td>
            </tr>
          </table>
        </div>
        <div id="cart_forms" class="negative-grid">
          <div class="grid_4">
            <div class="bottom_block discount">
              <h3>Discount Codes</h3>
              <p>Enter your coupon code if you have one.</p>
              <form>
                <p><input type="text" name="" value=""></p>
                <input type="submit" id="apply_coupon" value="Apply Coupon">
              </form>
            </div><!-- .discount -->
          </div><!-- .grid_4 -->
          <div class="grid_4">
            <div class="bottom_block total">
              <table class="subtotal">
                <tr class="grand_total">
                  <td>Grand Total</td>
                  <td class="price">₹<%= totalPrice %></td>
                </tr>
              </table>
              <form action="/checkout" method="POST">
                <button type="submit" class="checkout" id="checkout-button">PROCEED TO ORDER <img src="/img/checkout.png" alt=""
                    title=""></button>
              </form>
            </div><!-- .total -->
          </div><!-- .grid_4 -->
          <div class="clear"></div>
        </div><!-- #cart_forms -->
        <div class="clear"></div>
      </article>
    </div><!-- #content -->
    <div class="clear"></div>
  </div><!-- .container_12 -->
</section><!-- #main -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>

  const plusButtons = document.querySelectorAll('.plus');
  const minusButtons = document.querySelectorAll('.minus');
  //const checkoutButton = document.getElementById('checkout-button'); // Reference to the checkout button

  // Function to update the checkout button status based on the cart state
  /* function updateCheckoutButton(cart) {
    if (!cart || cart.length === 0) {
      checkoutButton.disabled = true; // Disable the button if cart is empty
    } else {
      checkoutButton.disabled = false; // Enable the button if cart has items
    }
  } */

  // Initial check to update the checkout button status
  //const cart = <%- JSON.stringify(cart) %>;

  plusButtons.forEach(button => {
    button.addEventListener('click', function () {
      const productId = this.getAttribute('data-product-id');
      const quantityElement = document.querySelector(`tr[data-product-id="${productId}"] .qty span`);
      const previousQuantity = parseInt(quantityElement.textContent);
      const quantity = previousQuantity + 1;
      quantityElement.textContent = quantity;
      updateQuantity(productId, quantity);
    });
  });

  minusButtons.forEach(button => {
    button.addEventListener('click', function () {
      const productId = this.getAttribute('data-product-id');
      const quantityElement = document.querySelector(`tr[data-product-id="${productId}"] .qty span`);
      const previousQuantity = parseInt(quantityElement.textContent);
      const quantity = Math.max(previousQuantity - 1, 1); // Ensure quantity is at least 1
      quantityElement.textContent = quantity;
      updateQuantity(productId, quantity);
    });
  });

  function updateQuantity(productId, quantity) {
    fetch('/cart/update', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ productId, quantity }),
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Cart updated successfully',
            text: 'Your cart has been updated successfully.',
            timer: 2000,
            showConfirmButton: false
          });
          updateCartTotals(data.cart);
          updateCheckoutButton(data.cart); // Update checkout button state
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Failed to update cart',
            text: data.error || 'Failed to update cart',
            timer: 2000,
            showConfirmButton: false
          });
        }
      })
      .catch(error => console.error('Error updating cart:', error));
  }

  function updateCartTotals(cart) {
    const subtotalElement = document.querySelector('.subtotal .price');
    const grandTotalElement = document.querySelector('.grand_total .price');

    if (!cart || cart.length === 0) {
      subtotalElement.textContent = `₹0.00`;
      grandTotalElement.textContent = `₹0.00`;
      updateCheckoutButton(cart); // Update checkout button state
      return;
    }

    let total = 0;

    cart.forEach(item => {
      const price = parseFloat(item.product.price) || 0;
      const discount = parseFloat(item.product.discount) || 0;
      const quantity = parseInt(item.quantity) || 1;

      const itemTotal = (price - (price * discount / 100)) * quantity;
      total += itemTotal;

      const itemSubtotalElement = document.querySelector(`tr[data-product-id="${item.product._id}"] .subtotal`);
      if (itemSubtotalElement) {
        itemSubtotalElement.textContent = `₹${itemTotal.toFixed(2)}`;
      }
    });

    subtotalElement.textContent = `₹${total.toFixed(2)}`;
    grandTotalElement.textContent = `₹${total.toFixed(2)}`;
    updateCheckoutButton(cart); // Update checkout button state
  }

  const removeButtons = document.querySelectorAll('.close');

  removeButtons.forEach(button => {
    button.addEventListener('click', function (event) {
      const productId = this.getAttribute('data-product-id');
      if (productId) {
        Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
          if (result.isConfirmed) {
            fetch('/cart/remove', {
              method: 'POST',  // Changed to POST
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ productId })  // Send productId in the body
            })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  Swal.fire({
                    icon: 'success',
                    title: 'Removed!',
                    text: 'The item has been removed from your cart.',
                    timer: 2000,
                    showConfirmButton: false
                  });

                  const itemRow = document.querySelector(`tr[data-product-id="${productId}"]`);
                  if (itemRow) {
                    itemRow.remove();
                    updateCartTotals(data.cart);  // Update cart totals
                  }
                } else {
                  Swal.fire({
                    icon: 'error',
                    title: 'Failed to remove',
                    text: data.error || 'Failed to remove the item from your cart',
                    timer: 2000,
                    showConfirmButton: false
                  });
                }
              })
              .catch(error => console.error('Error removing item:', error));
          }
        });
      }
    });
  });

  // Prevent proceeding if cart is empty and show alert
/*   checkoutButton.addEventListener('click', function (event) {
    if (checkoutButton.disabled) {
      event.preventDefault(); // Prevent form submission
      Swal.fire({
        icon: 'warning',
        title: 'Cart is empty',
        text: 'Please add items to your cart before proceeding to checkout.',
      });
    }
  }); */

</script>

<!--footer begins-->
<%- include("../../views/partials/user/footer") %>
<!--footer ends-->
