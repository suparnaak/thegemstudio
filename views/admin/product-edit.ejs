<%- include("../../views/partials/admin/header") %>

  <div class="container-fluid">
    <div class="row">

      <div class="col-lg-10 col-md-9 ml-sm-auto p-4">
        <div class="container mt-4">
          <h2>Edit Product</h2>
        
          <!-- Display error/success messages -->
          <% if (typeof query !== 'undefined' && query.status) { %>
            <div class="alert alert-<%= query.status === 'success' ? 'success' : 'danger' %> alert-dismissible fade show" role="alert">
              <%= query.message %>
              <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
          <% } %>
        
          <form action="/admin/products/edit/<%= product._id %>" method="POST" enctype="multipart/form-data" onsubmit="return validateForm()">
            <div class="form-group">
              <label for="name">Product Name</label>
              <input type="text" class="form-control" id="name" name="name" value="<%= product.name %>" required>
              <small id="nameError" class="text-danger" style="display:none;">Product name cannot contain only spaces.</small>
            </div>
        
            <div class="form-group">
              <label for="description">Description</label>
              <textarea class="form-control" id="description" name="description" required><%= product.description %></textarea>
              <small id="descriptionError" class="text-danger" style="display:none;">Description cannot contain only spaces.</small>
            </div>
        
            <div class="form-group">
              <label for="brand">Brand</label>
              <select class="form-control same-width" id="brand" name="brand" required>
                <% brands.forEach(brand => { %>
                  <option value="<%= brand._id %>" <%= product.brand._id.equals(brand._id) ? 'selected' : '' %>><%= brand.brandName %></option>
                <% }) %>
              </select>
            </div>
        
            <!-- Category, Color, and Material placed together above image upload -->
            <div class="form-group">
              <label for="category">Category</label>
              <select class="form-control same-width" id="category" name="category" required>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>" <%= product.category._id.equals(category._id) ? 'selected' : '' %>><%= category.name %></option>
                <% }) %>
              </select>
            </div>
        
            <div class="form-group">
              <label for="color">Color</label>
              <input type="text" class="form-control" id="color" name="color" value="<%= product.color %>" required>
              <small id="colorError" class="text-danger" style="display:none;">Color cannot contain only spaces.</small>
            </div>
        
            <div class="form-group">
              <label for="material">Material</label>
              <input type="text" class="form-control" id="material" name="material" value="<%= product.material %>" required>
              <small id="materialError" class="text-danger" style="display:none;">Material cannot contain only spaces.</small>
            </div>
        
            <!-- Continue with other form fields -->
            <div class="form-group">
              <label for="price">Price</label>
              <input type="number" class="form-control" id="price" name="price" value="<%= product.price %>" required min="0">
            </div>
        
            <div class="form-group">
              <label for="discount">Discount (%)</label>
              <input type="number" class="form-control" id="discount" name="discount" value="<%= product.discount %>" min="0" max="90">
            </div>
        
            <div class="form-group">
              <label for="quantity">Quantity</label>
              <input type="number" class="form-control" id="quantity" name="quantity" value="<%= product.quantity %>" required min="0">
            </div>
        
            <div class="form-group">
              <label for="status">Stock Status</label>
              <input type="text" class="form-control" id="status" name="status" value="<%= product.status %>" required readonly>
            </div>
        
            <!-- Image Upload Section -->
            <div class="form-group">
              <label for="existingImages">Current Product Images (Minimum 3 required)</label>
              <div class="d-flex flex-wrap" id="existingImagesContainer">
                <% if (product.images && product.images.length > 0) { %>
                  <% product.images.forEach(function(image, index) { %>
                    <div class="me-2 mb-2 image-item">
                      <img src="<%= image %>" class="img-thumbnail" alt="Product Image" style="max-width: 150px;">
                      <div>
                        <input type="checkbox" name="removeImages" value="<%= image %>" onchange="validateImageCount()"> Remove
                      </div>
                    </div>
                  <% }) %>
                <% } else { %>
                  <p>No images available for this product.</p>
                <% } %>
              </div>
              <small id="imageCountError" class="text-danger" style="display:none;">At least 3 images are required. Please add more images or uncheck some for removal.</small>
            </div>
        
            <div class="form-group">
              <label for="images">Upload New Images</label>
              <input type="file" class="form-control" id="images" name="images" multiple accept="image/*" onchange="validateImageCount()">
            </div>
        
            <div id="imagePreviewContainer" class="d-flex flex-wrap mb-3"></div>
        
            <button type="submit" class="btn btn-success" id="submitBtn">Update Product</button><br><br>
          </form>
        </div>
        
  </div>
  </div>
  <script>
    function hasOnlySpaces(value) {
      return value.trim().length === 0;
    }

    function hasNumbersOrSpecialChars(value) {
      // Allow only letters, spaces, and common color/material words with hyphens
      const regex = /^[a-zA-Z\s\-]+$/;
      return !regex.test(value.trim());
    }

    function validateField(fieldId, errorId) {
      const field = document.getElementById(fieldId);
      const errorElement = document.getElementById(errorId);

      if (hasOnlySpaces(field.value)) {
        errorElement.style.display = 'inline';
        field.classList.add('is-invalid');
      } else {
        errorElement.style.display = 'none';
        field.classList.remove('is-invalid');
      }
    }

    function validateColorMaterialField(fieldId, errorId) {
      const field = document.getElementById(fieldId);
      const errorElement = document.getElementById(errorId);

      if (hasOnlySpaces(field.value)) {
        errorElement.textContent = `${fieldId.charAt(0).toUpperCase() + fieldId.slice(1)} cannot contain only spaces.`;
        errorElement.style.display = 'inline';
        field.classList.add('is-invalid');
        return false;
      } else if (hasNumbersOrSpecialChars(field.value)) {
        errorElement.textContent = `${fieldId.charAt(0).toUpperCase() + fieldId.slice(1)} can only contain letters, spaces, and hyphens.`;
        errorElement.style.display = 'inline';
        field.classList.add('is-invalid');
        return false;
      } else {
        errorElement.style.display = 'none';
        field.classList.remove('is-invalid');
        return true;
      }
    }

    function validateImageCount() {
      const existingImages = document.querySelectorAll('input[name="removeImages"]');
      const newImageFiles = document.getElementById('images').files;
      const errorElement = document.getElementById('imageCountError');
      const submitBtn = document.getElementById('submitBtn');
      
      let remainingExistingImages = 0;
      existingImages.forEach(function(checkbox) {
        if (!checkbox.checked) {
          remainingExistingImages++;
        }
      });
      
      const newImagesCount = newImageFiles ? newImageFiles.length : 0;
      
      const totalImages = remainingExistingImages + newImagesCount;
      
      if (totalImages < 3) {
        errorElement.style.display = 'inline';
        submitBtn.disabled = true;
        submitBtn.classList.add('btn-secondary');
        submitBtn.classList.remove('btn-success');
        return false;
      } else {
        errorElement.style.display = 'none';
        submitBtn.disabled = false;
        submitBtn.classList.remove('btn-secondary');
        submitBtn.classList.add('btn-success');
        return true;
      }
    }

    function validateForm() {
      const textFields = [
        { id: 'name', error: 'nameError' },
        { id: 'description', error: 'descriptionError' },
        { id: 'brand', error: 'brandError' }
      ];

      const colorMaterialFields = [
        { id: 'color', error: 'colorError' },
        { id: 'material', error: 'materialError' }
      ];

      let isValid = true;

      textFields.forEach(function (field) {
        const inputField = document.getElementById(field.id);
        const errorField = document.getElementById(field.error);

        if (hasOnlySpaces(inputField.value)) {
          errorField.style.display = 'inline';
          inputField.classList.add('is-invalid');
          isValid = false;
        } else {
          errorField.style.display = 'none';
          inputField.classList.remove('is-invalid');
        }
      });

      colorMaterialFields.forEach(function (field) {
        if (!validateColorMaterialField(field.id, field.error)) {
          isValid = false;
        }
      });

      if (!validateImageCount()) {
        isValid = false;
      }

      return isValid;
    }

    document.getElementById('name').addEventListener('blur', function () {
      validateField('name', 'nameError');
    });

    document.getElementById('description').addEventListener('blur', function () {
      validateField('description', 'descriptionError');
    });

    document.getElementById('brand').addEventListener('blur', function () {
      validateField('brand', 'brandError');
    });

    document.getElementById('color').addEventListener('blur', function () {
      validateColorMaterialField('color', 'colorError');
    });

    document.getElementById('color').addEventListener('input', function () {
      validateColorMaterialField('color', 'colorError');
    });

    document.getElementById('material').addEventListener('blur', function () {
      validateColorMaterialField('material', 'materialError');
    });

    document.getElementById('material').addEventListener('input', function () {
      validateColorMaterialField('material', 'materialError');
    });

    document.querySelector('form').addEventListener('submit', function (event) {
      if (!validateForm()) {
        event.preventDefault();
      }
    });

    document.addEventListener('DOMContentLoaded', function() {
      validateImageCount();
    });
  </script>
  
  <script>
    const fileInput = document.getElementById('images');
    const imagePreviewContainer = document.getElementById('imagePreviewContainer');

    fileInput.addEventListener('change', function () {
      const files = fileInput.files;
      imagePreviewContainer.innerHTML = '';

      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();
        reader.onload = function (event) {
          const imageData = event.target.result;
          const imagePreview = document.createElement('div');
          imagePreview.className = 'image-preview me-2 mb-2';
          imagePreview.style.cssText = 'display: inline-block; border: 1px solid #ddd; padding: 5px; border-radius: 4px;';
          
          const img = document.createElement('img');
          img.src = imageData;
          img.style.cssText = 'max-width: 150px; max-height: 150px; display: block;';
          
          const fileName = document.createElement('small');
          fileName.textContent = file.name;
          fileName.style.cssText = 'display: block; text-align: center; margin-top: 5px;';
          
          imagePreview.appendChild(img);
          imagePreview.appendChild(fileName);
          imagePreviewContainer.appendChild(imagePreview);

          img.addEventListener('click', function () {
            const modal = document.createElement('div');
            modal.className = 'modal';
            modal.style.cssText = 'display: block; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.9);';
            
            const modalContent = document.createElement('div');
            modalContent.className = 'modal-content';
            modalContent.style.cssText = 'margin: 15% auto; padding: 20px; width: 80%; max-width: 700px; background-color: white; border-radius: 5px;';
            
            const closeButton = document.createElement('span');
            closeButton.className = 'close';
            closeButton.innerHTML = '&times;';
            closeButton.style.cssText = 'color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer;';
            closeButton.addEventListener('click', function () {
              document.body.removeChild(modal);
              if (typeof cropper !== 'undefined') {
                cropper.destroy();
              }
            });
            modalContent.appendChild(closeButton);

            const cropImage = document.createElement('img');
            cropImage.src = imageData;
            cropImage.style.cssText = 'max-width: 100%;';
            modalContent.appendChild(cropImage);
            modal.appendChild(modalContent);
            document.body.appendChild(modal);

          });
        };
        reader.readAsDataURL(file);
      }
      
      validateImageCount();
    });
  </script>

  <%- include("../../views/partials/admin/footer") %></document_content>