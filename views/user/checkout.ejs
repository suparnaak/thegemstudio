<!--header begins-->
<%- include("../../views/partials/user/header") %>
<!--header ends-->

<div class="breadcrumbs">
    <div class="container_12">
        <div class="grid_12">
            <a href="/">Home</a><span></span><span class="current">Checkout</span>
        </div>
    </div>
</div>

<section id="checkout-main" class="checkout-section">
    <div class="container_12">
        <div class="grid_12">
            <header>
                <h1 class="page_title">Checkout</h1>
            </header>

            <div class="coupons-section">
                <h3>Available Coupons:</h3>
                <div class="coupon-dropdown">
                    <select id="coupon-select" name="coupon">
                        <option value="" disabled selected>Select a coupon</option>
                        <% coupons.forEach(function(coupon) { %>
                            <option value="<%= coupon.code %>" data-discount="<%= coupon.discount_rs %>">
                                <%= coupon.code %> : ₹<%= coupon.discount_rs %> Off
                            </option>
                        <% }) %>
                    </select>
                    <div class="coupon-actions">
                        <button id="apply-coupon-btn" class="button" style="width: 100px;">Apply</button>
                        <button id="remove-coupon-btn" class="button" style="width: 100px; display: none;">Remove</button>
                    </div>
                </div>
            </div>

            <h3>Products in Your Order:</h3>
            <table class="order-table">
                <thead>
                    <tr>
                        <th style="text-align: left;">Product Name</th>
                        <th style="text-align: left;">Quantity</th>
                        <th style="text-align: left;">Unit Price</th>
                        <th style="text-align: left;">Discount %</th>
                        <th style="text-align: left;">Discounted Price</th>
                        <th style="text-align: left;">Status</th>
                    </tr>
                </thead>
                <tbody>
                    <% availableProducts.forEach(function(product) { %>
                        <tr>
                            <td style="text-align: left;"><%= product.name %></td>
                            <td style="text-align: left;"><%= product.quantity %></td>
                            <td style="text-align: left;">₹<%= product.price %></td>
                            <td style="text-align: left;"><%= product.appliedDiscountPercent %></td>
                            <td style="text-align: left;">₹<%= product.finalPrice %></td>
                            <td style="text-align: left;">Available</td>
                        </tr>
                    <% }) %>
                    <% unavailableProducts.forEach(function(product) { %>
                        <tr style="color: red;">
                            <td style="text-align: left;"><%= product.name %></td>
                            <td style="text-align: left;">N/A</td>
                            <td style="text-align: left;">N/A</td>
                            <td style="text-align: left;"><%= product.status %></td>
                        </tr>
                    <% }) %>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" style="text-align: left; font-size: 1.5rem; color: rgb(1, 169, 1);">
                            <strong>Grand Total: ₹<span id="displayed-total"><%= grandTotal %></span></strong>
                            <div style="color: red;" id="discount-display"></div>
                        </td>
                    </tr>
                </tfoot>
            </table>

            <div id="checkout-content" class="checkout-content">
                <% if (availableProducts.length > 0) { %>
                    <form action="/checkout/placeOrder" method="POST" id="checkout-form">
                        <input type="hidden" name="availableProducts" value='<%= JSON.stringify(availableProducts) %>'>
                        <input type="hidden" name="grandTotal" id="grandTotal" value="<%= grandTotal %>">
                        <input type="hidden" name="appliedCoupon" id="appliedCoupon">

                        <div id="delivery-address" class="checkout-step">
                            <h3 class="step-title">1. Delivery Address</h3>

                            <div class="saved-addresses">
                                <h5>Select a Saved Address:</h5>
                                <ul class="address-list">
                                    <% addresses.forEach(function(address) { %>
                                        <li>
                                            <input type="radio" id="<%= address._id %>" name="delivery_address"
                                                value="<%= address._id %>">
                                            <label for="<%= address._id %>">
                                                <%= address.name %>, <%= address.houseName %>, <%= address.street %>,
                                                <%= address.city %>, <%= address.country %>, <%= address.mobile %>
                                            </label>
                                        </li>
                                    <% }) %>
                                </ul>
                            </div>

                            <div class="add-new-address">
                                <a href="/manage-addresses/add-address" class="add-address-link">Click here to add a new address</a>
                            </div>
                        </div>

                        <div id="payment-method" class="checkout-step">
                            <h3 class="step-title">2. Payment Method</h3>
                            <div class="payment-options">
                                <ul class="payment-list">
                                    <li>
                                        <input type="radio" id="cod" name="payment_method" value="Cash on Delivery">
                                        <label for="cod">Cash on Delivery</label>
                                    </li>
                                    <li>
                                        <input type="radio" id="netbanking" name="payment_method" value="Online">
                                        <label for="netbanking">Pay Online</label>
                                    </li>
                                    <li>
                                        <input type="radio" id="wallet" name="payment_method" value="Wallet">
                                        <label for="wallet">Pay From Wallet</label>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <div id="place-order" class="checkout-step">
                            <h3 class="step-title">3. Place Your Order</h3>
                            <button type="submit" class="button place-order-button">Place Order</button>
                        </div>
                    </form>
                <% } else { %>
                    <p>All products in your cart are unavailable. Unable to proceed with the order.</p>
                <% } %>
            </div>
        </div><!-- .grid_12 -->
    </div><!-- .container_12 -->
</section><!-- #checkout-main -->

<div class="clear"></div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
 document.addEventListener('DOMContentLoaded', function() {
    const originalGrandTotal = parseFloat('<%= grandTotal %>');
    let discountedTotal = originalGrandTotal;

    const applyCouponBtn = document.getElementById('apply-coupon-btn');
    const removeCouponBtn = document.getElementById('remove-coupon-btn');
    const couponSelect = document.getElementById('coupon-select');
    const appliedCouponInput = document.getElementById('appliedCoupon');
    const grandTotalInput = document.getElementById('grandTotal');
    const checkoutForm = document.getElementById('checkout-form');
    const placeOrderButton = document.querySelector('.place-order-button');
    const discountDisplay = document.getElementById('discount-display');
    const addressRadios = document.querySelectorAll('input[name="delivery_address"]');
    const paymentRadios = document.querySelectorAll('input[name="payment_method"]');

    function updatePlaceOrderButton() {
        const addressSelected = Array.from(addressRadios).some(radio => radio.checked);
        const paymentSelected = Array.from(paymentRadios).some(radio => radio.checked);
        placeOrderButton.disabled = !addressSelected || !paymentSelected;
    }

    addressRadios.forEach(radio => {
        radio.addEventListener('change', updatePlaceOrderButton);
    });

    paymentRadios.forEach(radio => {
        radio.addEventListener('change', updatePlaceOrderButton);
    });

    function updateDisplayedTotal(total) {
        const displayedTotal = document.getElementById('displayed-total');
        if (displayedTotal) {
            displayedTotal.innerText = total.toFixed(2);
        }
        grandTotalInput.value = total.toFixed(2);
    }

    if (checkoutForm) {
        checkoutForm.addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent default form submission

            const addressSelected = Array.from(addressRadios).some(radio => radio.checked);
            const paymentSelected = Array.from(paymentRadios).some(radio => radio.checked);
            
            // Address and payment validation
            if (!addressSelected || !paymentSelected) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Incomplete Order Details',
                    text: 'Please select both a delivery address and payment method.',
                    confirmButtonText: 'OK'
                });
                return;
            }

            const selectedPaymentMethod = Array.from(paymentRadios).find(radio => radio.checked)?.value;
            
            // Cash on Delivery validation
            if (selectedPaymentMethod === 'Cash on Delivery' && discountedTotal > 1000) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Cash on Delivery Not Available',
                    text: 'Cash on Delivery is not available for orders above ₹1000. Please choose a different payment method.',
                    confirmButtonText: 'OK'
                });
                return;
            }

            try {
                const formData = new FormData(checkoutForm);
                const response = await fetch(checkoutForm.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams(formData)
                });
                
                const contentType = response.headers.get("content-type");
                
                if (contentType && contentType.includes("application/json")) {
                    const result = await response.json();
                    if (!response.ok) {
                        if (result.error === 'insufficient_balance') {
                            await Swal.fire({
                                icon: 'error',
                                title: 'Insufficient Wallet Balance',
                                html: `Your wallet balance (₹${result.currentBalance.toFixed(2)}) is insufficient for this purchase.<br>Required amount: ₹${result.requiredAmount.toFixed(2)}`,
                                confirmButtonText: 'OK'
                            });
                        } else {
                            throw new Error(result.message || 'Something went wrong');
                        }
                    }
                } else {
                    // If the response is HTML, replace the current page
                    const htmlContent = await response.text();
                    document.open();
                    document.write(htmlContent);
                    document.close();
                }
            } catch (error) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'An error occurred while processing your order.',
                    confirmButtonText: 'OK'
                });
            }
        });
    }

    // Coupon application logic
    if (applyCouponBtn) {
        applyCouponBtn.addEventListener('click', async function() {
            const selectedOption = couponSelect.options[couponSelect.selectedIndex];
            const selectedCoupon = selectedOption.value;
            if (!selectedCoupon) {
                await Swal.fire({
                    icon: 'error',
                    title: 'No Coupon Selected',
                    text: 'Please select a coupon to apply.',
                    confirmButtonText: 'OK'
                });
                return;
            }

            const discountAmount = parseFloat(selectedOption.getAttribute('data-discount'));
            discountedTotal = originalGrandTotal - discountAmount;

            appliedCouponInput.value = selectedCoupon;
            updateDisplayedTotal(discountedTotal);
            
            applyCouponBtn.style.display = 'none';
            removeCouponBtn.style.display = 'inline-block';
            discountDisplay.innerHTML = `You saved ₹${discountAmount} with coupon ${selectedCoupon}`;

            await Swal.fire({
                icon: 'success',
                title: 'Coupon Applied!',
                text: `Coupon code ${selectedCoupon} has been applied successfully!`,
                confirmButtonText: 'OK'
            });
        });
    }

    // Coupon removal logic
    if (removeCouponBtn) {
        removeCouponBtn.addEventListener('click', async function() {
            discountedTotal = originalGrandTotal;
            appliedCouponInput.value = '';
            updateDisplayedTotal(discountedTotal);
            
            discountDisplay.innerHTML = '';
            applyCouponBtn.style.display = 'inline-block';
            removeCouponBtn.style.display = 'none';

            await Swal.fire({
                icon: 'info',
                title: 'Coupon Removed',
                text: 'The coupon has been removed from your order.',
                confirmButtonText: 'OK'
            });
        });
    }
});
</script>
<%- include("../../views/partials/user/footer") %>
