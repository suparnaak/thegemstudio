<%- include("../../views/partials/admin/header") %>

  <div class="container-fluid">
    <div class="row">

      <div class="col-lg-10 col-md-9 ml-sm-auto p-4">
        <div class="container mt-4">
          <h2>Edit Product</h2>
        
          <form action="/admin/products/edit/<%= product._id %>" method="POST" enctype="multipart/form-data" onsubmit="return validateForm()">
            <div class="form-group">
              <label for="name">Product Name</label>
              <input type="text" class="form-control" id="name" name="name" value="<%= product.name %>" required>
              <small id="nameError" class="text-danger" style="display:none;">Product name cannot contain only spaces.</small>
            </div>
        
            <div class="form-group">
              <label for="description">Description</label>
              <textarea class="form-control" id="description" name="description" required><%= product.description %></textarea>
              <small id="descriptionError" class="text-danger" style="display:none;">Description cannot contain only spaces.</small>
            </div>
        
            <div class="form-group">
              <label for="brand">Brand</label>
              <select class="form-control same-width" id="brand" name="brand" required>
                <% brands.forEach(brand => { %>
                  <option value="<%= brand._id %>" <%= product.brand._id.equals(brand._id) ? 'selected' : '' %>><%= brand.brandName %></option>
                <% }) %>
              </select>
            </div>
        
            <!-- Category, Color, and Material placed together above image upload -->
            <div class="form-group">
              <label for="category">Category</label>
              <select class="form-control same-width" id="category" name="category" required>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>" <%= product.category._id.equals(category._id) ? 'selected' : '' %>><%= category.name %></option>
                <% }) %>
              </select>
            </div>
        
            <div class="form-group">
              <label for="color">Color</label>
              <input type="text" class="form-control" id="color" name="color" value="<%= product.color %>" required>
              <small id="colorError" class="text-danger" style="display:none;">Color cannot contain only spaces.</small>
            </div>
        
            <div class="form-group">
              <label for="material">Material</label>
              <input type="text" class="form-control" id="material" name="material" value="<%= product.material %>" required>
              <small id="materialError" class="text-danger" style="display:none;">Material cannot contain only spaces.</small>
            </div>
        
            <!-- Continue with other form fields -->
            <div class="form-group">
              <label for="price">Price</label>
              <input type="number" class="form-control" id="price" name="price" value="<%= product.price %>" required min="0">
            </div>
        
            <div class="form-group">
              <label for="discount">Discount (%)</label>
              <input type="number" class="form-control" id="discount" name="discount" value="<%= product.discount %>" min="0" max="90">
            </div>
        
            <div class="form-group">
              <label for="quantity">Quantity</label>
              <input type="number" class="form-control" id="quantity" name="quantity" value="<%= product.quantity %>" required min="0">
            </div>
        
            <div class="form-group">
              <label for="status">Stock Status</label>
              <input type="text" class="form-control" id="status" name="status" value="<%= product.status %>" required readonly>
            </div>
        
            <!-- Image Upload Section -->
            <div class="form-group">
              <label for="existingImages">Current Product Images</label>
              <div class="d-flex flex-wrap">
                <% if (product.images && product.images.length > 0) { %>
                  <% product.images.forEach(function(image, index) { %>
                    <div class="me-2">
                      <img src="/uploads/products/<%= image %>" class="img-thumbnail" alt="Product Image" style="max-width: 150px;">
                      <input type="checkbox" name="removeImages" value="<%= image %>"> Remove
                    </div>
                  <% }) %>
                <% } else { %>
                  <p>No images available for this product.</p>
                <% } %>
              </div>
            </div>
        
            <div class="form-group">
              <label for="images">Upload New Images (min 3)</label>
              <input type="file" class="form-control" id="images" name="images" multiple accept="image/*">
            </div>
        
            <div id="imagePreviewContainer" class="d-flex flex-wrap mb-3"></div>
        
            <button type="submit" class="btn btn-success">Update Product</button><br><br>
          </form>
        </div>
        
  </div>
  </div>
  <script>
    function hasOnlySpaces(value) {
      return value.trim().length === 0;
    }

    function validateField(fieldId, errorId) {
      const field = document.getElementById(fieldId);
      const errorElement = document.getElementById(errorId);

      if (hasOnlySpaces(field.value)) {
        errorElement.style.display = 'inline';
        field.classList.add('is-invalid');
      } else {
        errorElement.style.display = 'none';
        field.classList.remove('is-invalid');
      }
    }
    function validateForm() {

      const fields = [
        { id: 'name', error: 'nameError' },
        { id: 'description', error: 'descriptionError' },
        { id: 'brand', error: 'brandError' },
        { id: 'color', error: 'colorError' },
        { id: 'material', error: 'materialError' }
      ];

      let isValid = true;

      fields.forEach(function (field) {
        const inputField = document.getElementById(field.id);
        const errorField = document.getElementById(field.error);

        if (hasOnlySpaces(inputField.value)) {
          errorField.style.display = 'inline';
          inputField.classList.add('is-invalid');
          isValid = false;
        } else {
          errorField.style.display = 'none';
          inputField.classList.remove('is-invalid');
        }
      });

      return isValid;
    }
    document.getElementById('name').addEventListener('blur', function () {
      validateField('name', 'nameError');
    });

    document.getElementById('description').addEventListener('blur', function () {
      validateField('description', 'descriptionError');
    });

    document.getElementById('brand').addEventListener('blur', function () {
      validateField('brand', 'brandError');
    });

    document.getElementById('color').addEventListener('blur', function () {
      validateField('color', 'colorError');
    });

    document.getElementById('material').addEventListener('blur', function () {
      validateField('material', 'materialError');
    });

    document.querySelector('form').addEventListener('submit', function (event) {
      if (!validateForm()) {
        event.preventDefault();
      }
    });
  </script>
  <script>
    const fileInput = document.getElementById('images');
    const imagePreviewContainer = document.getElementById('imagePreviewContainer');

    fileInput.addEventListener('change', function () {
      const files = fileInput.files;
      imagePreviewContainer.innerHTML = '';

      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();
        reader.onload = function (event) {
          const imageData = event.target.result;
          const imagePreview = document.createElement('div');
          imagePreview.className = 'image-preview';
          const img = document.createElement('img');
          img.src = imageData;
          imagePreview.appendChild(img);
          imagePreviewContainer.appendChild(imagePreview);

          img.addEventListener('click', function () {
            const modal = document.createElement('div');
            modal.className = 'modal';
            const modalContent = document.createElement('div');
            modalContent.className = 'modal-content';
            const closeButton = document.createElement('span');
            closeButton.className = 'close';
            closeButton.innerHTML = '&times;';
            closeButton.addEventListener('click', function () {
              modal.style.display = 'none';
              cropper.destroy();
            });
            modalContent.appendChild(closeButton);

            const cropImage = document.createElement('img');
            cropImage.src = imageData;
            modalContent.appendChild(cropImage);
            modal.appendChild(modalContent);
            document.body.appendChild(modal);
            modal.style.display = 'block';

            const cropper = new Cropper(cropImage, {
              aspectRatio: 16 / 9,
              viewMode: 1,
              dragMode: 'move',
              cropBoxResizable: true,
              ready: function () {
                const cropButton = document.createElement('button');
                cropButton.innerHTML = 'Crop';
                cropButton.className = 'crop';
                cropButton.addEventListener('click', function () {
                  const croppedCanvas = cropper.getCroppedCanvas();
                  const croppedImage = croppedCanvas.toDataURL("image/png");
                  img.src = croppedImage;
                  modal.style.display = 'none';
                  cropper.destroy();
                });
                modalContent.appendChild(cropButton);
              }
            });
          });
        };
        reader.readAsDataURL(file);
      }
    });



  </script>

  <%- include("../../views/partials/admin/footer") %>