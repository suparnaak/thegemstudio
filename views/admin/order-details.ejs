<%- include("../partials/admin/header") %> 

<div class="container-fluid">
  <div class="row">
    <div class="col-lg-10 col-md-9 ml-sm-auto p-4">
      <h1>Order Details</h1>
      <div class="card mb-4">
        <div class="card-body">
          <h5 class="card-title">Order ID: <%= order.orderId %></h5>
          <p class="card-text">
            Customer: <%= order.userId.name %> (<%= order.userId.email %>)
          </p>
          <p class="card-text">
            Order Date: <%= order.orderDate.toLocaleDateString() %>
          </p>
          <p class="card-text">
            Payment Method: <%= order.paymentMethod %>
          </p>
          <div class="payment-status">
            <p class="card-text">
              Payment Status: <span class="status"><%= order.paymentStatus %></span>
            </p>
          </div>
          <br>
          <p class="card-text">
            Grand Total: ₹<%= order.grandTotal.toFixed(2) %>
          </p>
        </div>
      </div>

      <h2>Products</h2>
      <table class="table">
        <thead>
          <tr>
            <th>Product</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Subtotal</th>
            <th>Delivery Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% 
            // allow shipping if COD or Wallet, or if online and already Paid 
            const canAdvance = 
              order.paymentMethod === 'Cash on Delivery' 
              || order.paymentMethod === 'Wallet' 
              || order.paymentStatus === 'Paid';
            const nextStatusMap = {
              'Pending': 'Shipped',
              'Shipped': 'On Transit',
              'On Transit': 'Out for Delivery',
              'Out for Delivery': 'Delivered'
            };
          %>

          <% order.items.forEach(item => { %>
            <tr>
              <td><%= item.productId.name %></td>
              <td>₹<%= item.price.toFixed(2) %></td>
              <td><%= item.quantity %></td>
              <td>₹<%= item.subtotal.toFixed(2) %></td>
              <td><%= item.deliveryStatus %></td>
              <td>
                <% if (item.deliveryStatus === 'Pending') { %>
                  <% if (canAdvance) { %>
                    <button class="btn btn-success btn-sm changeStatus"
                            data-product-id="<%= item.productId._id %>"
                            data-status="Shipped">
                      Mark as Shipped
                    </button>
                  <% } %>
                  <button class="btn btn-danger btn-sm changeStatus"
                          data-product-id="<%= item.productId._id %>"
                          data-status="Admin Cancelled">
                    Cancel Order
                  </button>

                <% } else if (['Shipped','On Transit','Out for Delivery'].includes(item.deliveryStatus)) { %>
                  <% if (canAdvance) { 
                       const next = nextStatusMap[item.deliveryStatus];
                  %>
                    <button class="btn btn-success btn-sm changeStatus"
                            data-product-id="<%= item.productId._id %>"
                            data-status="<%= next %>">
                      Mark as <%= next %>
                    </button>
                  <% } %>

                <% } else if (item.deliveryStatus === 'Return Pending') { %>
                  <% if (canAdvance) { %>
                    <button class="btn btn-warning btn-sm changeStatus"
                            data-product-id="<%= item.productId._id %>"
                            data-status="Returned">
                      Mark as Returned
                    </button>
                  <% } %>
                <% } %>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>

      <h2>Delivery Address</h2>
      <p>
        <%= order.address.name %>, 
        <%= order.address.houseName %>, 
        <%= order.address.street %>,
        <%= order.address.city %>, 
        <%= order.address.country %> – 
        <%= order.address.zipcode %><br>
        Mobile: <%= order.address.mobile %>
      </p>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.changeStatus').forEach(button => {
    button.addEventListener('click', function() {
      const newStatus = this.getAttribute('data-status');
      const productId = this.getAttribute('data-product-id');

      let confirmText = `You are about to change the delivery status to "${newStatus}".`;
      if (newStatus === 'Admin Cancelled') {
        confirmText = 'You are about to cancel this order. This action cannot be undone.';
      } else if (newStatus === 'Returned') {
        confirmText = 'You are about to mark this item as returned. This action cannot be undone.';
      }

      Swal.fire({
        title: 'Are you sure?',
        text: confirmText,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, update',
        cancelButtonText: 'No, keep'
      }).then(result => {
        if (result.isConfirmed) {
          fetch('/admin/update-order-status', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              orderId: '<%= order._id %>',
              productId,
              newStatus
            })
          })
          .then(r => r.json())
          .then(data => {
            if (data.error) {
              Swal.fire('Error', data.error, 'error');
            } else {
              Swal.fire('Updated', data.message, 'success')
                .then(() => location.reload());
            }
          })
          .catch(() => Swal.fire('Error', 'Could not update status', 'error'));
        }
      });
    });
  });
});
</script>

<%- include("../partials/admin/footer") %>
