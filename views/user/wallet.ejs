<!-- Header -->
<%- include("../../views/partials/user/header") %>
    <!-- End Header -->

    <div class="breadcrumbs">
        <div class="container_12">
            <div class="grid_12">
                <a href="/">Home</a><span></span><span class="current">Wallet</span>
            </div>
        </div>
    </div>

    <div class="address-page">
        <div class="container mt-5">
            <div class="row">
                <!-- Sidebar -->
                <%- include("../../views/partials/user/sidebar") %>

                    <!-- Main Content -->
                    <div class="col-md-9">
                        <h2 class="mb-4">Wallet</h2>

                        <!-- Display the Balance -->
                        <div class="wallet-balance mb-4">
                            <h4>Your Balance: ₹<%= balance.toFixed(2) %>
                            </h4>
                        </div>

                        <!-- Add Money Form -->
                        <div class="add-money-form mb-4">
                            <h4>Add Money to Wallet</h4>
                            <form id="addMoneyForm" class="mt-3">
                                <div class="form-group">
                                    <label for="amount">Amount (₹)</label>
                                    <input type="number" class="form-control" id="amount" name="amount" min="1" step="1"
                                        required>
                                </div>
                                <button type="submit" class="btn btn-primary mt-2">Add Money</button>
                            </form>
                        </div>

                        <!-- Display Transactions -->
<h4>Transactions</h4>
<% if (transactions.length === 0) { %>
    <p>No transactions yet.</p>
<% } else { %>
    <table class="table table-bordered" style="text-align: left;">
        <thead>
            <tr>
                <th>Date</th>
                <th>Type</th>
                <th>Amount</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <% transactions.forEach(transaction => { %>
                <tr>
                    <td>
                        <%= new Date(transaction.date).toLocaleDateString() %>
                    </td>
                    <td>
                        <%= transaction.type === 'credit' ? 'Credit' : 'Debit' %>
                    </td>
                    <td>₹<%= transaction.amount.toFixed(2) %></td>
                    <td>
                        <%= transaction.description %>
                    </td>
                </tr>
            <% }) %>
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <% if (currentPage > 1) { %>
                <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                </li>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                </li>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                </li>
            <% } %>
        </ul>
    </nav>
<% } %>
                    </div>
            </div>
        </div>
    </div>

    <!-- Add this before the footer -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.getElementById('addMoneyForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const amount = document.getElementById('amount').value;

            try {
                const response = await fetch('/add-money-to-wallet', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ amount: amount })
                });

                const data = await response.json();

                if (data.order) {
                    const options = {
                        key: '<%= razorpayKey %>',
                        amount: data.order.amount,
                        currency: data.order.currency,
                        name: 'Add Money to Wallet',
                        description: 'Wallet Recharge',
                        order_id: data.order.id,
                        handler: function (response) {
                            verifyPayment(response, data.order);
                        },
                        prefill: {
                            name: '<%= user.name %>',
                            email: '<%= user.email %>'
                        },
                        theme: {
                            color: '#3399cc'
                        }
                    };

                    const rzp = new Razorpay(options);
                    rzp.open();

                    rzp.on('payment.failed', function (response) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: 'The payment was unsuccessful. Please try again.',
                            confirmButtonColor: '#3085d6'
                        });
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong while processing your request.',
                    confirmButtonColor: '#3085d6'
                });
            }
        });

        async function verifyPayment(payment, order) {
            try {
                const response = await fetch('/verify-wallet-payment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        payment,
                        order
                    })
                });

                const data = await response.json();
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Payment Successful!',
                        text: 'Your wallet has been updated successfully.',
                        confirmButtonColor: '#3085d6'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.reload();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Verification Failed',
                        text: 'Payment could not be verified. Please contact support if money was deducted.',
                        confirmButtonColor: '#3085d6'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Verification Error',
                    text: 'An error occurred while verifying the payment.',
                    confirmButtonColor: '#3085d6'
                });
            }
        }
    </script>

    <%- include("../../views/partials/user/footer") %>